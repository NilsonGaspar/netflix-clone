[{"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\YoutubePlayer.js":"1","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\ModalScreen.js":"2","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\App.js":"3","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\FeaturedMovie.js":"4","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\Nav.js":"5","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\MovieRow.js":"6","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\HandleRequests.js":"7","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\index.js":"8","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\Firebase.js":"9","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\Login.js":"10"},{"size":604,"mtime":1607342289996,"results":"11","hashOfConfig":"12"},{"size":6702,"mtime":1607361887733,"results":"13","hashOfConfig":"12"},{"size":3966,"mtime":1607093264961,"results":"14","hashOfConfig":"12"},{"size":2132,"mtime":1607342338367,"results":"15","hashOfConfig":"12"},{"size":2834,"mtime":1607361935431,"results":"16","hashOfConfig":"12"},{"size":2886,"mtime":1607347193112,"results":"17","hashOfConfig":"12"},{"size":955,"mtime":1607361980745,"results":"18","hashOfConfig":"12"},{"size":410,"mtime":1606139169998,"results":"19","hashOfConfig":"12"},{"size":569,"mtime":1607001749859,"results":"20","hashOfConfig":"12"},{"size":1944,"mtime":1607006848754,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"7v4at9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\YoutubePlayer.js",["44"],"import React from \"react\";\r\nimport \"./YoutubePlayer.css\";\r\nfunction YoutubePlayer({ videoKey, showModal }) {\r\n  const HandleVideoKey = videoKey?.[0]?.key;\r\n\r\n  return (\r\n    <div className=\"youtube-player\">\r\n      <iframe\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: showModal ? \"100%\" : \"100vh\",\r\n        }}\r\n        frameBorder=\"0\"\r\n        allowFullScreen={true}\r\n        src={`https://www.youtube.com/embed/${HandleVideoKey}?autoplay=1&mute=1`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YoutubePlayer;\r\n","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\ModalScreen.js",["45","46","47","48","49"],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\App.js",["50"],"import \"./App.css\";\nimport MovieRow from \"./components/MovieRow\";\nimport HandleRequests from \"./HandleRequests\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport { useState, useEffect } from \"react\";\nimport ModalScreen from \"./components/ModalScreen\";\n\nimport { auth } from \"./Firebase\";\n\nfunction App() {\n  const [getMovie, setGetMovie] = useState();\n  const [showModal, setShowModal] = useState(false);\n  const [videoKey, setVideoKey] = useState();\n  const [handleShowNav, setHandleShowNav] = useState(false);\n  // Login\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  useEffect(() => {\n    const authListener = () => {\n      auth.onAuthStateChanged((user) => {\n        if (user) {\n          setUser(user);\n        } else {\n          setUser(\"\");\n        }\n      });\n    };\n    authListener();\n  }, []);\n\n  const CleanInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const HandleLogOut = () => {\n    auth.signOut();\n  };\n\n  return (\n    <div className={`app ${showModal ? \"active\" : \"\"}`}>\n      {user ? (\n        <>\n          <ModalScreen\n            showModal={showModal}\n            setShowModal={setShowModal}\n            getMovie={getMovie}\n            setGetMovie={setGetMovie}\n            videoKey={videoKey}\n            setVideoKey={setVideoKey}\n          />\n          <Nav\n            handleShowNav={handleShowNav}\n            setHandleShowNav={setHandleShowNav}\n            HandleLogOut={HandleLogOut}\n          />\n          <FeaturedMovie\n            handleShowNav={handleShowNav}\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            videoKey={videoKey}\n            setVideoKey={setVideoKey}\n            title=\"Netflix Originals\"\n            fetchURL={HandleRequests.NetflixOriginals}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Netflix Originals\"\n            fetchURL={HandleRequests.NetflixOriginals}\n            largePoster\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Trending Now\"\n            fetchURL={HandleRequests.TrendingNow}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Top Rated\"\n            fetchURL={HandleRequests.TopRated}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Popular\"\n            fetchURL={HandleRequests.TrendingNow}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Action Movies\"\n            fetchURL={HandleRequests.ActionMovies}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Romance Movies\"\n            fetchURL={HandleRequests.RomanceMovies}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Horror Movies\"\n            fetchURL={HandleRequests.HorrorMovies}\n          />\n          <MovieRow\n            setGetMovie={setGetMovie}\n            setShowModal={setShowModal}\n            title=\"Comedy Movies\"\n            fetchURL={HandleRequests.ComedyMovies}\n          />\n        </>\n      ) : (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          error={error}\n          setError={setError}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\FeaturedMovie.js",["51","52"],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\Nav.js",["53","54","55","56","57","58"],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\MovieRow.js",["59"],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\HandleRequests.js",["60"],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\index.js",[],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\Firebase.js",["61"],"C:\\Users\\Nilson Gaspar\\Desktop\\Coding\\My Apps\\netflix-clone-app\\src\\components\\Login.js",[],{"ruleId":"62","severity":1,"message":"63","line":8,"column":7,"nodeType":"64","endLine":19,"endColumn":9},{"ruleId":"65","severity":1,"message":"66","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":44},{"ruleId":"65","severity":1,"message":"69","line":16,"column":18,"nodeType":"67","messageId":"68","endLine":16,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":73,"column":6,"nodeType":"72","endLine":73,"endColumn":16,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":139,"column":13,"nodeType":"64","endLine":139,"endColumn":88},{"ruleId":"74","severity":1,"message":"75","line":158,"column":19,"nodeType":"64","endLine":161,"endColumn":21},{"ruleId":"65","severity":1,"message":"76","line":37,"column":9,"nodeType":"67","messageId":"68","endLine":37,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":25,"column":6,"nodeType":"72","endLine":25,"endColumn":8,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":33,"column":6,"nodeType":"72","endLine":33,"endColumn":21,"suggestions":"80"},{"ruleId":"65","severity":1,"message":"81","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":21},{"ruleId":"70","severity":1,"message":"82","line":18,"column":6,"nodeType":"72","endLine":18,"endColumn":8,"suggestions":"83"},{"ruleId":"65","severity":1,"message":"84","line":21,"column":9,"nodeType":"67","messageId":"68","endLine":21,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":43,"column":9,"nodeType":"64","endLine":43,"endColumn":73},{"ruleId":"65","severity":1,"message":"87","line":52,"column":12,"nodeType":"67","messageId":"68","endLine":52,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":57,"column":9,"nodeType":"64","endLine":61,"endColumn":10},{"ruleId":"74","severity":1,"message":"75","line":74,"column":15,"nodeType":"64","endLine":79,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":6,"column":1,"nodeType":"90","endLine":28,"endColumn":3},{"ruleId":"65","severity":1,"message":"91","line":16,"column":7,"nodeType":"67","messageId":"68","endLine":16,"endColumn":16},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setIsOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NumberOfSeason', 'setVideoKey', and 'showModal'. Either include them or remove the dependency array. If 'setVideoKey' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["92"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CleanInputs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchURL'. Either include it or remove the dependency array.",["93"],"React Hook useEffect has missing dependencies: 'play', 'setGetMovie', and 'setVideoKey'. Either include them or remove the dependency array. If 'setVideoKey' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["94"],"'IconContext' is defined but never used.","React Hook useEffect has a missing dependency: 'setHandleShowNav'. Either include it or remove the dependency array. If 'setHandleShowNav' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["95"],"'closeMobileMenu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'activeMenu' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'firestore' is assigned a value but never used.",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [NumberOfSeason, getMovie, setVideoKey, showModal]",{"range":"104","text":"105"},"Update the dependencies array to be: [fetchURL]",{"range":"106","text":"107"},"Update the dependencies array to be: [handleShowNav, play, setGetMovie, setVideoKey]",{"range":"108","text":"109"},"Update the dependencies array to be: [setHandleShowNav]",{"range":"110","text":"111"},[2733,2743],"[NumberOfSeason, getMovie, setVideoKey, showModal]",[719,721],"[fetchURL]",[865,880],"[handleShowNav, play, setGetMovie, setVideoKey]",[556,558],"[setHandleShowNav]"]